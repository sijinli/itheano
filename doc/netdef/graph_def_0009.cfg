# modified from def_0004
#
# Here I will add dropout 

[l_img_feature]
type=data
inputs=s_img_feature
input_dims=1024

[l_target_feature]
type=data
inputs=s_target_feature
input_dims=1024

[l_candidate_feature]
type=data
inputs=s_candidate_feature
input_dims=1024


[l_gt_margin]
type=data
inputs=s_gt_margin
input_dims=1

[l_candidate_margin]
type=data
inputs=s_candidate_margin
input_dims=1


[net1_fc1]
type=fc
inputs=l_img_feature,l_target_feature
output_dims=1024
wd=0.00001,0.00001
initW=0.1,0.1
initb=0
neuron=relu2

[net1_fc2]
type=fc
inputs=net1_fc1
output_dims=1
wd=0.00001
initW=0.1
initb=0

[net1_fc2_dropout]
type=dropout
inputs=net1_fc2
keep=0.5


[net2_fc1]
type=fc
inputs=l_img_feature,l_candidate_feature
output_dims=1024
wd=0.00001,0.00001
initW=0.1,0.1
initb=0
weightSource=net1_fc1[0],net1_fc1[1]
biasSource=net1_fc1
neuron=relu2

[net2_fc2]
type=fc
inputs=net2_fc1
output_dims=1
wd=0.00001
initW=0.01
initb=0
weightSource=net1_fc2
biasSource=net1_fc2

[net2_fc2_dropout]
type=dropout
inputs=net2_fc2
keep=0.5


[net1_score]
type=eltsum
inputs=net1_fc2_dropout, l_gt_margin
coeffs=1,1

[net2_score]
type=eltsum
inputs=net2_fc2_dropout, l_candidate_margin
coeffs=1,1

[net2_mmcost]
type=cost.maxmargin
inputs=net1_score,net2_score
neuron=relu2

[network1]
type=network
cost_layer_names=
data_layer_names=l_img_feature, l_target_feature, l_gt_margin
output_layer_names=net1_score
layer_with_weights=net1_fc1,net1_fc2

[network2]
type=network
cost_layer_names=net2_mmcost
data_layer_names=l_img_feature, l_target_feature, l_candidate_feature, l_gt_margin,l_candidate_margin
output_layer_names=net1_fc2, net2_fc1
layer_with_weights=net1_fc1, net1_fc2, net1

