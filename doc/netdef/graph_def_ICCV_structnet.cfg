#-------------------------------------
# This is the network definition file for 
# Maximum-Margin Structured Learning with Deep Networks for 3D Human Pose Estimation, Sijin LI, Weichen Zhang, Antoni B.Chan, ICCV 2015

[imgdata]
type=data
inputs=s_imgdata
input_dims=(3, 112,112)
#channel, height, width

[joints]
type=data
inputs=s_joints
input_dims=51

[candidate_joints]
type=data
inputs=s_candidate_joints
input_dims=51


[l_gt_margin]
type=data
inputs=s_gt_margin
input_dims=1

[l_candidate_margin]
type=data
inputs=s_candidate_margin
input_dims=1



[conv1]
type=conv
inputs=imgdata
sizeX=9
sizeY=9
filters=32
strideX=1
strideY=1
board_mode=valid
initW=0.00005
initb=0
wd=0
neuron=relu2
epsW=0.0005
epsB=0.002
# 32 @ 104 x 104

[pool1]
type=pool
inputs=conv1
sizeX=3
sizeY=3
strideX=2
strideY=2
pooling_type=max
# 32 @ 52 x 52

[conv2]
type=conv
inputs=pool1
sizeX=5
sizeY=5
filters=64
strideX=1
strideY=1
board_mode=valid
initW=0.001
initb=0
wd=0
neuron=relu2
epsW=0.0005
epsB=0.002
# 64 @ 48 x 48

[pool2]
type=pool
inputs=conv2
sizeX=3
sizeY=3
strideX=2
strideY=2
pooling_type=max
# 64 @ 24 x 24


[conv3]
type=conv
inputs=pool2
sizeX=5
sizeY=5
filters=64
strideX=1
strideY=1
board_mode=valid
initW=0.001
initb=0
wd=0
epsW=0.0005
epsB=0.002
# 64 @ 20 x 20

[pool3]
type=pool
inputs=conv3
sizeX=3
sizeY=3
strideX=2
strideY=2
pooling_type=max
# 64 @ 10 x 10

[fc_p2]
type=fc
inputs=pool2
output_dims=256
wd=0.0001
initW=0.001
epsW=0.0005
epsB=0.002
initb=0
neuron=relu2

[fc_p3]
type=fc
inputs=pool3
output_dims=1024
wd=0.0001
initW=0.001
epsW=0.0005
epsB=0.002
initb=0
neuron=relu2

[concat0]
type=concat
inputs=fc_p2,fc_p3


[concat0_dropout]	
type=dropout
inputs=concat0
keep=0.25

[fc_j1]
type=fc
inputs=concat0_dropout
output_dims=2048
wd=0.0001
initW=0.001
epsW=0.0005
epsB=0.002
initb=0
neuron=relu


[fc_img]
type=fc
inputs=fc_j1
output_dims=1024
wd=0.0001
initW=0.001
epsW=0.0005
epsB=0.002
initb=0
neuron=relu2

[fc_j2]
type=fc
inputs=fc_j1
output_dims=51
wd=0.0001
initW=0.001
epsW=0.0005
epsB=0.002
initb=0
neuron=tanh[1,1]


# This is for image feature representation


#########################################################
[net1_fc_0]
type=fc
inputs=joints
output_dims=1024
wd=0.0001
initW=0.1
initb=0
neuron=relu2
epsW=0.0005
epsB=0.002


[net1_fc_0_add]
type=fc
inputs=net1_fc_0
output_dims=1024
wd=0.0001
initW=0.1
initb=0
neuron=relu
epsW=0.0005
epsB=0.002


###################
[net2_fc_0]
type=fc
inputs=candidate_joints
output_dims=1024
wd=0.0001
initW=0.1
initb=0
neuron=relu2
weightSource=net1_fc_0
biasSource=net1_fc_0

[net2_fc_0_add]
type=fc
inputs=net2_fc_0
output_dims=1024
wd=0.0001
initW=0.1
initb=0
neuron=relu
weightSource=net1_fc_0_add
biasSource=net1_fc_0_add


[net1_prod]
type=dotprod
inputs=net1_fc_0_add,fc_img

[net2_prod]
type=dotprod
inputs=net2_fc_0_add,fc_img

[net1_score]
type=eltsum
inputs=net1_prod, l_gt_margin
coeffs=1,1

[net2_score]
type=eltsum
inputs=net2_prod, l_candidate_margin
coeffs=1,1


###################################


[net2_mmcost]
type=cost.maxmargin
inputs=net1_score,net2_score
neuron=relu2
coeff=0.5

[sqdiff]
type=cost.sqdiff
inputs=joints,fc_j2
coeff=0.5

##############################
[feature_net]
type=network
cost_layer_names=
data_layer_names=imgdata
output_layer_names=fc_img
layer_with_weights=

[target_trans_net]
type=network
cost_layer_names=
data_layer_names=joints
output_layer_names=net1_fc_0_add
layer_with_weights=


[train_net]
type=network
data_layer_names=imgdata,joints,candidate_joints,l_gt_margin,l_candidate_margin
cost_layer_names=net2_mmcost,sqdiff
output_layer_names=net1_score,net2_score
layer_with_weights=net1_fc_0,net1_fc_0_add,fc_p2,fc_p3,fc_j1,fc_img,fc_j2

